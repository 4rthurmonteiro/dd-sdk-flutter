---
format_version: '8'
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
project_type: flutter

workflows:
  primary:
    before_run:
    - _flutter_install
    - setup
    - check_dependencies
    - build
    - unit_test_ios
    - unit_test_android
    - integration_android
    - integration_ios
    after_run:
    - _deploy
  
  nightly:
    before_run:
    - setup
    - nightly_ios
    - nightly_android

  _flutter_install:
    steps:
    - flutter-installer@0:
        inputs:
        - version: beta
    
  _prepare_gradle_wrapper:
    steps:
    - script:
        title: Get gradle wrapper
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -e
            gradle wrapper
        - working_dir: "$BITRISE_SOURCE_DIR/packages/datadog_flutter_plugin/example/android"
  
  _launch_ios_simulator:
    steps:
    - script:
        title: Launch iOS Simulator
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -e
            flutter emulators --launch apple_ios_simulator
            # Sleep while the simulator warms a bit
            sleep 5

  _pub_get:
    steps:
      - script:
          title: Run pub get in all projects
          inputs:
          - content: |-
              #!/usr/bin/env bash
              set -e

              for d in packages/*/ ; do
                  pushd "$d"
                  if [ ! -f "pubspec.yaml" ]; then
                      echo "Skipping $d because it is missing pubspec.yaml"
                      popd
                      continue
                  fi
                  echo "pub get in $d"
                  flutter pub get

                  subapps=( "integration_test_app" "e2e_test_app" )
                  for subapp in "${subapps[@]}"; do
                      if [ -d "$subapp" ];  then
                          pushd "$subapp"
                          echo "pub get in $d/$subapp"
                          flutter pub get
                          popd
                      fi
                  done
                  popd
              done

              for d in tools/*/ ; do
                  pushd "$d"
                  if [ ! -f "pubspec.yaml" ]; then
                      echo "Skipping $d because it is missing pubspec.yaml"
                      popd
                      continue
                  fi
                  echo "pub get in $d"
                  dart pub get
                  popd
              done
          - working_dir: "$BITRISE_SOURCE_DIR"

  build:
    steps:
    - flutter-analyze@0.3.1:
        inputs:
        - project_location: "$BITRISE_SOURCE_DIR/packages/datadog_flutter_plugin/"

    - script:
        title: Android lint and static analysis
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -e
            gradle wrapper
            ./gradlew ktlintCheck detekt
        - working_dir: "$BITRISE_SOURCE_DIR/packages/datadog_flutter_plugin/example/android"
    
    - flutter-test@1.0.1:
        inputs:
        - project_location: "$BITRISE_SOURCE_DIR/packages/datadog_flutter_plugin"
    
    - flutter-test@1.0.1:
        inputs:
        - project_location: "$BITRISE_SOURCE_DIR/packages/datadog_flutter_plugin/example"

    - flutter-test@1.0.1:
        inputs:
        - project_location: "$BITRISE_SOURCE_DIR/packages/datadog_tracking_http_client"
    
    - flutter-test@1.0.1:
        inputs:
        - project_location: "$BITRISE_SOURCE_DIR/packages/datadog_grpc_interceptor"
    

    - flutter-build@0.14.0:
        inputs:
        - project_location: "$BITRISE_SOURCE_DIR/packages/datadog_flutter_plugin/example"
        - platform: both
  
  _deploy:
    steps:
    - deploy-to-bitrise-io: {}

  setup:
    before_run:
    - _pub_get
    steps:
    - script:
        title: Generate env files
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -e
            ./generate_env.sh
    - avd-manager@1:
        inputs:
        - api_level: '30'
    - wait-for-android-emulator@1: {}

  unit_test_ios:
    steps:
    - xcode-test@4.0.2:
        inputs:
        - project_path: "$BITRISE_SOURCE_DIR/packages/datadog_flutter_plugin/example/ios/Runner.xcworkspace"
        - scheme: Runner
        - destination: platform=iOS Simulator,name=iPhone 13,OS=latest

  unit_test_android:
    before_run:
    - _prepare_gradle_wrapper
    steps:
    - android-unit-test@1.0.5:
        inputs:
        - project_location: "$BITRISE_SOURCE_DIR/packages/datadog_flutter_plugin/example/android"
        - module: datadog_flutter_plugin

  integration_android:
    steps:
    - flutter-test@1:
        inputs:
        - project_location: "$BITRISE_SOURCE_DIR/packages/datadog_flutter_plugin/integration_test_app"
        - tests_path_pattern: "integration_test"
        - additional_params: "-d emulator --dart-define DD_CLIENT_TOKEN=$DD_CLIENT_TOKEN,DD_APPLICATION_ID=$DD_APPLICATION_ID"
    - flutter-test@1:
        inputs:
        - project_location: "$BITRISE_SOURCE_DIR/packages/datadog_tracking_http_client/example"
        - tests_path_pattern: "integration_test"
        - additional_params: "-d emulator --dart-define DD_CLIENT_TOKEN=$DD_CLIENT_TOKEN,DD_APPLICATION_ID=$DD_APPLICATION_ID"
  
  integration_ios:
    before_run:
    - _launch_ios_simulator
    steps:
    - flutter-test@1:
        inputs:
        - project_location: "$BITRISE_SOURCE_DIR/packages/datadog_flutter_plugin/integration_test_app"
        - tests_path_pattern: "integration_test"
        - additional_params: "-d iPhone --dart-define DD_CLIENT_TOKEN=$DD_CLIENT_TOKEN,DD_APPLICATION_ID=$DD_APPLICATION_ID"
    - flutter-test@1:
        inputs:
        - project_location: "$BITRISE_SOURCE_DIR/packages/datadog_tracking_http_client/example"
        - tests_path_pattern: "integration_test"
        - additional_params: "-d iPhone --dart-define DD_CLIENT_TOKEN=$DD_CLIENT_TOKEN,DD_APPLICATION_ID=$DD_APPLICATION_ID"

  nightly_ios:
    before_run:
    - _launch_ios_simulator
    steps:
      - flutter-test@1:
          inputs:
          - project_location: "$BITRISE_SOURCE_DIR/packages/datadog_flutter_plugin/e2e_test_app"
          - tests_path_pattern: "integration_test"
          - additional_params: "-d iPhone"

  nightly_android:
    steps:
    - flutter-test@1:
        inputs:
        - project_location: "$BITRISE_SOURCE_DIR/packages/datadog_flutter_plugin/e2e_test_app"
        - tests_path_pattern: "integration_test"
        - additional_params: "-d emulator"
    
  check_dependencies:
    steps:
    - script:
        title: Check dependencies
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -e
            dart ./bin/third_party_scanner.dart
        - working_dir: "$BITRISE_SOURCE_DIR/tools/third_party_scanner"
